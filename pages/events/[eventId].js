import Head from "next/head";
import { Fragment } from "react";
import EventContent from "../../components/event-detail/EventContent";
import EventLogistics from "../../components/event-detail/EventLogistics";
import EventSummary from "../../components/event-detail/EventSummary";
import Button from "../../components/ui/Button";
import ErrorAlert from "../../components/ui/ErrorAlert";

import { getEventById, getFeaturedEvents } from '../../utils/api-data';

const EventDetailPage = ({ event }) => {
  if (!event) {
    return (
      <Fragment>
        <ErrorAlert>
          <h1 className="text-3xl center text-white">No such event found!</h1>
        </ErrorAlert>
        <div className="center my-4">
          <Button link="/events">Show All Events</Button>
        </div>
      </Fragment>
    );
  }

  return (
    <Fragment>
      <Head>
        <title>Dynamic Events Page</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <section>
        <EventSummary title={event.title} />
        <EventLogistics
          date={event.date}
          address={event.location}
          image={event.image}
          imageAlt={event.title} />
        <EventContent>
          <p>{event.description}</p>
        </EventContent>
      </section>
    </Fragment>
  );
};

export const getStaticPaths = async () => {
  const events = await getFeaturedEvents();
  const paths = events.map(event => ({ params: { eventId: event.id }}));
  return {
    paths,
    fallback: 'blocking'
  }
}

export const getStaticProps = async (context) => {
  const eventId = context.params.eventId;
  const event = await getEventById(eventId);

  if (!event) {
    return { props: {}}
  }

  return {
    props: {
      event
    },
    revalidate: 30
  }
}

export default EventDetailPage;
